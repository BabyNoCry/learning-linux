  1 #ifndef _TCP_CLIENT_HPP
  2 #define _TCP_CLIENT_HPP
  3 #include<netinet/in.h>
  4 #include<arpa/inet.h>
  5 #include<string>
  6 #include<string.h>
  7 #include<sys/types.h>
  8 #include<unistd.h>
  9 #include<sys/socket.h>
 10 #include<stdlib.h>
 11 #include<iostream>
 12 using namespace std;
 13 class TcpClient{
 14 
 15 
 16     private:
 17         int sock;
 18         string ip;
 19         int port;
 20     public:
 21         TcpClient(string ip_,int port_):ip(ip_),port(port_),sock(-1)
 22         { }
 23         
 24 
 25         void InitClient()
 26         {
 27             sock=socket(AF_INET,SOCK_STREAM,0);
 28             if(sock<0)
 29             {
 30                 cerr<<"socket error"<<endl;
 31                 exit(2);
 32             }
 33 
 34 
 35         }
 36 
 37         void Start()
 38         {
 39             
 40             struct sockaddr_in peer;
 41             bzero(&peer,sizeof(peer));
 42             //客户端必须做的---连接
 43             peer.sin_family=AF_INET;
 44             peer.sin_port=htons(port);
 45             peer.sin_addr.s_addr=inet_addr(ip.c_str());
 46             if(connect(sock,(struct sockaddr*)&peer,sizeof(peer))<0)
 47             {
 48                 cerr<<"connect error"<<endl;
 49                 exit(3);
 50             }
 51             char buf[1024]; 
 52              string in;
 53             while(1)
 54             {
 55 
 56                  cout<<"Please Enter#";
 57                  cin>>in;
 58                  write(sock,in.c_str(),in.size());
 59                 int s=read(sock,buf,sizeof(buf)-1);
 60                  if(s>0)
 61                  {
 62                     buf[s]=0;
 63                      cout<<"Server Echo#"<<buf<<endl;
 64                 
 65                  }
 66              }
 67         }
